# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from common import health_pb2 as common_dot_health__pb2
from items import items_model_pb2 as items_dot_items__model__pb2
from items import items_pb2 as items_dot_items__pb2


class MruVItemServiceStub(object):
    """The MruV items service provides procedures for managing items and containers
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateItem = channel.unary_unary(
                '/mruv.MruVItemService/CreateItem',
                request_serializer=items_dot_items__model__pb2.Item.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ItemID.FromString,
                )
        self.GetItem = channel.unary_unary(
                '/mruv.MruVItemService/GetItem',
                request_serializer=items_dot_items__model__pb2.ItemID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.Item.FromString,
                )
        self.DeleteItem = channel.unary_unary(
                '/mruv.MruVItemService/DeleteItem',
                request_serializer=items_dot_items__model__pb2.ItemID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ItemID.FromString,
                )
        self.GetItems = channel.unary_unary(
                '/mruv.MruVItemService/GetItems',
                request_serializer=items_dot_items__pb2.GetItemsRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.GetItemsResponse.FromString,
                )
        self.CreateItemType = channel.unary_unary(
                '/mruv.MruVItemService/CreateItemType',
                request_serializer=items_dot_items__model__pb2.ItemType.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ItemTypeID.FromString,
                )
        self.GetItemType = channel.unary_unary(
                '/mruv.MruVItemService/GetItemType',
                request_serializer=items_dot_items__model__pb2.ItemTypeID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ItemType.FromString,
                )
        self.DeleteItemType = channel.unary_unary(
                '/mruv.MruVItemService/DeleteItemType',
                request_serializer=items_dot_items__model__pb2.ItemTypeID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ItemTypeID.FromString,
                )
        self.GetItemTypes = channel.unary_unary(
                '/mruv.MruVItemService/GetItemTypes',
                request_serializer=items_dot_items__pb2.GetItemTypesRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.GetItemTypesResponse.FromString,
                )
        self.CreateContainer = channel.unary_unary(
                '/mruv.MruVItemService/CreateContainer',
                request_serializer=items_dot_items__model__pb2.Container.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ContainerID.FromString,
                )
        self.GetContainer = channel.unary_unary(
                '/mruv.MruVItemService/GetContainer',
                request_serializer=items_dot_items__model__pb2.ContainerID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.Container.FromString,
                )
        self.DeleteContainer = channel.unary_unary(
                '/mruv.MruVItemService/DeleteContainer',
                request_serializer=items_dot_items__model__pb2.ContainerID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ContainerID.FromString,
                )
        self.GetContainers = channel.unary_unary(
                '/mruv.MruVItemService/GetContainers',
                request_serializer=items_dot_items__pb2.GetContainersRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.GetContainersResponse.FromString,
                )
        self.CreateContainerType = channel.unary_unary(
                '/mruv.MruVItemService/CreateContainerType',
                request_serializer=items_dot_items__model__pb2.ContainerType.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ContainerTypeID.FromString,
                )
        self.GetContainerType = channel.unary_unary(
                '/mruv.MruVItemService/GetContainerType',
                request_serializer=items_dot_items__model__pb2.ContainerTypeID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ContainerType.FromString,
                )
        self.DeleteContainerType = channel.unary_unary(
                '/mruv.MruVItemService/DeleteContainerType',
                request_serializer=items_dot_items__model__pb2.ContainerTypeID.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.ContainerTypeID.FromString,
                )
        self.GetContainerTypes = channel.unary_unary(
                '/mruv.MruVItemService/GetContainerTypes',
                request_serializer=items_dot_items__pb2.GetContainerTypesRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.GetContainerTypesResponse.FromString,
                )
        self.GetContainerItems = channel.unary_unary(
                '/mruv.MruVItemService/GetContainerItems',
                request_serializer=items_dot_items__pb2.GetContainerItemsRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.GetContainerItemsResponse.FromString,
                )
        self.PullItem = channel.unary_unary(
                '/mruv.MruVItemService/PullItem',
                request_serializer=items_dot_items__pb2.PullItemRequest.SerializeToString,
                response_deserializer=items_dot_items__model__pb2.Item.FromString,
                )
        self.PutItem = channel.unary_unary(
                '/mruv.MruVItemService/PutItem',
                request_serializer=items_dot_items__pb2.PutItemRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.PutItemResponse.FromString,
                )
        self.SortItems = channel.unary_unary(
                '/mruv.MruVItemService/SortItems',
                request_serializer=items_dot_items__pb2.SortItemsRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.SortItemsResponse.FromString,
                )
        self.GetNearestItems = channel.unary_unary(
                '/mruv.MruVItemService/GetNearestItems',
                request_serializer=items_dot_items__pb2.GetNearestItemsRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.GetNearestItemsResponse.FromString,
                )
        self.UseItem = channel.unary_unary(
                '/mruv.MruVItemService/UseItem',
                request_serializer=items_dot_items__pb2.UseItemRequest.SerializeToString,
                response_deserializer=items_dot_items__pb2.UseItemResponse.FromString,
                )
        self.GetServiceStatus = channel.unary_unary(
                '/mruv.MruVItemService/GetServiceStatus',
                request_serializer=common_dot_health__pb2.ServiceStatusRequest.SerializeToString,
                response_deserializer=common_dot_health__pb2.ServiceStatusResponse.FromString,
                )
        self.GetServiceVersion = channel.unary_unary(
                '/mruv.MruVItemService/GetServiceVersion',
                request_serializer=common_dot_health__pb2.VersionRequest.SerializeToString,
                response_deserializer=common_dot_health__pb2.VersionResponse.FromString,
                )


class MruVItemServiceServicer(object):
    """The MruV items service provides procedures for managing items and containers
    """

    def CreateItem(self, request, context):
        """Create new item.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItem(self, request, context):
        """Get item by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteItem(self, request, context):
        """Delete item by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItems(self, request, context):
        """Gets all items.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateItemType(self, request, context):
        """Create item type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItemType(self, request, context):
        """Get item type by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteItemType(self, request, context):
        """Delete item type by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItemTypes(self, request, context):
        """Gets all item types.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContainer(self, request, context):
        """Create container.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainer(self, request, context):
        """Get container by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteContainer(self, request, context):
        """Delete container by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainers(self, request, context):
        """Get all containers.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateContainerType(self, request, context):
        """Create a container type.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainerType(self, request, context):
        """Get a container type by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteContainerType(self, request, context):
        """Delete a container type by id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainerTypes(self, request, context):
        """Get all container types.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetContainerItems(self, request, context):
        """Get items inside a container.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullItem(self, request, context):
        """Pull an item from container.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PutItem(self, request, context):
        """Put an item into container.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SortItems(self, request, context):
        """Sort items inside container.
        This procedure change order of items inside container.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNearestItems(self, request, context):
        """Retrieves from the container the list of items nearest to the given position.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UseItem(self, request, context):
        """Trigger action associated with the item usage.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceStatus(self, request, context):
        """Get service health status.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceVersion(self, request, context):
        """Get service current version.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MruVItemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateItem': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateItem,
                    request_deserializer=items_dot_items__model__pb2.Item.FromString,
                    response_serializer=items_dot_items__model__pb2.ItemID.SerializeToString,
            ),
            'GetItem': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItem,
                    request_deserializer=items_dot_items__model__pb2.ItemID.FromString,
                    response_serializer=items_dot_items__model__pb2.Item.SerializeToString,
            ),
            'DeleteItem': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteItem,
                    request_deserializer=items_dot_items__model__pb2.ItemID.FromString,
                    response_serializer=items_dot_items__model__pb2.ItemID.SerializeToString,
            ),
            'GetItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItems,
                    request_deserializer=items_dot_items__pb2.GetItemsRequest.FromString,
                    response_serializer=items_dot_items__pb2.GetItemsResponse.SerializeToString,
            ),
            'CreateItemType': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateItemType,
                    request_deserializer=items_dot_items__model__pb2.ItemType.FromString,
                    response_serializer=items_dot_items__model__pb2.ItemTypeID.SerializeToString,
            ),
            'GetItemType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemType,
                    request_deserializer=items_dot_items__model__pb2.ItemTypeID.FromString,
                    response_serializer=items_dot_items__model__pb2.ItemType.SerializeToString,
            ),
            'DeleteItemType': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteItemType,
                    request_deserializer=items_dot_items__model__pb2.ItemTypeID.FromString,
                    response_serializer=items_dot_items__model__pb2.ItemTypeID.SerializeToString,
            ),
            'GetItemTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemTypes,
                    request_deserializer=items_dot_items__pb2.GetItemTypesRequest.FromString,
                    response_serializer=items_dot_items__pb2.GetItemTypesResponse.SerializeToString,
            ),
            'CreateContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContainer,
                    request_deserializer=items_dot_items__model__pb2.Container.FromString,
                    response_serializer=items_dot_items__model__pb2.ContainerID.SerializeToString,
            ),
            'GetContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainer,
                    request_deserializer=items_dot_items__model__pb2.ContainerID.FromString,
                    response_serializer=items_dot_items__model__pb2.Container.SerializeToString,
            ),
            'DeleteContainer': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteContainer,
                    request_deserializer=items_dot_items__model__pb2.ContainerID.FromString,
                    response_serializer=items_dot_items__model__pb2.ContainerID.SerializeToString,
            ),
            'GetContainers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainers,
                    request_deserializer=items_dot_items__pb2.GetContainersRequest.FromString,
                    response_serializer=items_dot_items__pb2.GetContainersResponse.SerializeToString,
            ),
            'CreateContainerType': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateContainerType,
                    request_deserializer=items_dot_items__model__pb2.ContainerType.FromString,
                    response_serializer=items_dot_items__model__pb2.ContainerTypeID.SerializeToString,
            ),
            'GetContainerType': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainerType,
                    request_deserializer=items_dot_items__model__pb2.ContainerTypeID.FromString,
                    response_serializer=items_dot_items__model__pb2.ContainerType.SerializeToString,
            ),
            'DeleteContainerType': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteContainerType,
                    request_deserializer=items_dot_items__model__pb2.ContainerTypeID.FromString,
                    response_serializer=items_dot_items__model__pb2.ContainerTypeID.SerializeToString,
            ),
            'GetContainerTypes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainerTypes,
                    request_deserializer=items_dot_items__pb2.GetContainerTypesRequest.FromString,
                    response_serializer=items_dot_items__pb2.GetContainerTypesResponse.SerializeToString,
            ),
            'GetContainerItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetContainerItems,
                    request_deserializer=items_dot_items__pb2.GetContainerItemsRequest.FromString,
                    response_serializer=items_dot_items__pb2.GetContainerItemsResponse.SerializeToString,
            ),
            'PullItem': grpc.unary_unary_rpc_method_handler(
                    servicer.PullItem,
                    request_deserializer=items_dot_items__pb2.PullItemRequest.FromString,
                    response_serializer=items_dot_items__model__pb2.Item.SerializeToString,
            ),
            'PutItem': grpc.unary_unary_rpc_method_handler(
                    servicer.PutItem,
                    request_deserializer=items_dot_items__pb2.PutItemRequest.FromString,
                    response_serializer=items_dot_items__pb2.PutItemResponse.SerializeToString,
            ),
            'SortItems': grpc.unary_unary_rpc_method_handler(
                    servicer.SortItems,
                    request_deserializer=items_dot_items__pb2.SortItemsRequest.FromString,
                    response_serializer=items_dot_items__pb2.SortItemsResponse.SerializeToString,
            ),
            'GetNearestItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNearestItems,
                    request_deserializer=items_dot_items__pb2.GetNearestItemsRequest.FromString,
                    response_serializer=items_dot_items__pb2.GetNearestItemsResponse.SerializeToString,
            ),
            'UseItem': grpc.unary_unary_rpc_method_handler(
                    servicer.UseItem,
                    request_deserializer=items_dot_items__pb2.UseItemRequest.FromString,
                    response_serializer=items_dot_items__pb2.UseItemResponse.SerializeToString,
            ),
            'GetServiceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceStatus,
                    request_deserializer=common_dot_health__pb2.ServiceStatusRequest.FromString,
                    response_serializer=common_dot_health__pb2.ServiceStatusResponse.SerializeToString,
            ),
            'GetServiceVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceVersion,
                    request_deserializer=common_dot_health__pb2.VersionRequest.FromString,
                    response_serializer=common_dot_health__pb2.VersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mruv.MruVItemService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MruVItemService(object):
    """The MruV items service provides procedures for managing items and containers
    """

    @staticmethod
    def CreateItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/CreateItem',
            items_dot_items__model__pb2.Item.SerializeToString,
            items_dot_items__model__pb2.ItemID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetItem',
            items_dot_items__model__pb2.ItemID.SerializeToString,
            items_dot_items__model__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/DeleteItem',
            items_dot_items__model__pb2.ItemID.SerializeToString,
            items_dot_items__model__pb2.ItemID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetItems',
            items_dot_items__pb2.GetItemsRequest.SerializeToString,
            items_dot_items__pb2.GetItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateItemType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/CreateItemType',
            items_dot_items__model__pb2.ItemType.SerializeToString,
            items_dot_items__model__pb2.ItemTypeID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItemType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetItemType',
            items_dot_items__model__pb2.ItemTypeID.SerializeToString,
            items_dot_items__model__pb2.ItemType.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteItemType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/DeleteItemType',
            items_dot_items__model__pb2.ItemTypeID.SerializeToString,
            items_dot_items__model__pb2.ItemTypeID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItemTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetItemTypes',
            items_dot_items__pb2.GetItemTypesRequest.SerializeToString,
            items_dot_items__pb2.GetItemTypesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/CreateContainer',
            items_dot_items__model__pb2.Container.SerializeToString,
            items_dot_items__model__pb2.ContainerID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetContainer',
            items_dot_items__model__pb2.ContainerID.SerializeToString,
            items_dot_items__model__pb2.Container.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteContainer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/DeleteContainer',
            items_dot_items__model__pb2.ContainerID.SerializeToString,
            items_dot_items__model__pb2.ContainerID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetContainers',
            items_dot_items__pb2.GetContainersRequest.SerializeToString,
            items_dot_items__pb2.GetContainersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateContainerType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/CreateContainerType',
            items_dot_items__model__pb2.ContainerType.SerializeToString,
            items_dot_items__model__pb2.ContainerTypeID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainerType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetContainerType',
            items_dot_items__model__pb2.ContainerTypeID.SerializeToString,
            items_dot_items__model__pb2.ContainerType.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteContainerType(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/DeleteContainerType',
            items_dot_items__model__pb2.ContainerTypeID.SerializeToString,
            items_dot_items__model__pb2.ContainerTypeID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainerTypes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetContainerTypes',
            items_dot_items__pb2.GetContainerTypesRequest.SerializeToString,
            items_dot_items__pb2.GetContainerTypesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetContainerItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetContainerItems',
            items_dot_items__pb2.GetContainerItemsRequest.SerializeToString,
            items_dot_items__pb2.GetContainerItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PullItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/PullItem',
            items_dot_items__pb2.PullItemRequest.SerializeToString,
            items_dot_items__model__pb2.Item.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PutItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/PutItem',
            items_dot_items__pb2.PutItemRequest.SerializeToString,
            items_dot_items__pb2.PutItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SortItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/SortItems',
            items_dot_items__pb2.SortItemsRequest.SerializeToString,
            items_dot_items__pb2.SortItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNearestItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetNearestItems',
            items_dot_items__pb2.GetNearestItemsRequest.SerializeToString,
            items_dot_items__pb2.GetNearestItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UseItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/UseItem',
            items_dot_items__pb2.UseItemRequest.SerializeToString,
            items_dot_items__pb2.UseItemResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetServiceStatus',
            common_dot_health__pb2.ServiceStatusRequest.SerializeToString,
            common_dot_health__pb2.ServiceStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.MruVItemService/GetServiceVersion',
            common_dot_health__pb2.VersionRequest.SerializeToString,
            common_dot_health__pb2.VersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
