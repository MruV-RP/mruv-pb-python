# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from characters import characters_pb2 as characters_dot_characters__pb2
from common import health_pb2 as common_dot_health__pb2


class MruVCharactersServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateCharacter = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/CreateCharacter',
                request_serializer=characters_dot_characters__pb2.CreateCharacterRequest.SerializeToString,
                response_deserializer=characters_dot_characters__pb2.CreateCharacterResponse.FromString,
                )
        self.GetCharacter = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/GetCharacter',
                request_serializer=characters_dot_characters__pb2.GetCharacterRequest.SerializeToString,
                response_deserializer=characters_dot_characters__pb2.GetCharacterResponse.FromString,
                )
        self.UpdateCharacter = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/UpdateCharacter',
                request_serializer=characters_dot_characters__pb2.UpdateCharacterRequest.SerializeToString,
                response_deserializer=characters_dot_characters__pb2.UpdateCharacterResponse.FromString,
                )
        self.DeleteCharacter = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/DeleteCharacter',
                request_serializer=characters_dot_characters__pb2.DeleteCharacterRequest.SerializeToString,
                response_deserializer=characters_dot_characters__pb2.DeleteCharacterResponse.FromString,
                )
        self.PermanentCharacterKill = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/PermanentCharacterKill',
                request_serializer=characters_dot_characters__pb2.CharacterID.SerializeToString,
                response_deserializer=characters_dot_characters__pb2.CharacterID.FromString,
                )
        self.ChangeClothes = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/ChangeClothes',
                request_serializer=characters_dot_characters__pb2.ChangeClothesRequest.SerializeToString,
                response_deserializer=characters_dot_characters__pb2.ChangeClothesResponse.FromString,
                )
        self.DeathsStream = channel.unary_stream(
                '/mruv.characters.MruVCharactersService/DeathsStream',
                request_serializer=characters_dot_characters__pb2.DeathStreamRequest.SerializeToString,
                response_deserializer=characters_dot_characters__pb2.DeathStreamResponse.FromString,
                )
        self.GetServiceStatus = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/GetServiceStatus',
                request_serializer=common_dot_health__pb2.ServiceStatusRequest.SerializeToString,
                response_deserializer=common_dot_health__pb2.ServiceStatusResponse.FromString,
                )
        self.GetServiceVersion = channel.unary_unary(
                '/mruv.characters.MruVCharactersService/GetServiceVersion',
                request_serializer=common_dot_health__pb2.VersionRequest.SerializeToString,
                response_deserializer=common_dot_health__pb2.VersionResponse.FromString,
                )


class MruVCharactersServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateCharacter(self, request, context):
        """Create a character.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCharacter(self, request, context):
        """Get a character.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCharacter(self, request, context):
        """Update a character.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCharacter(self, request, context):
        """Delete a character.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PermanentCharacterKill(self, request, context):
        """Kill a character. A character that is killed cannot be played anymore.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeClothes(self, request, context):
        """Change player clothes.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeathsStream(self, request, context):
        """Stream of deaths.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceStatus(self, request, context):
        """Service status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetServiceVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MruVCharactersServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCharacter,
                    request_deserializer=characters_dot_characters__pb2.CreateCharacterRequest.FromString,
                    response_serializer=characters_dot_characters__pb2.CreateCharacterResponse.SerializeToString,
            ),
            'GetCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCharacter,
                    request_deserializer=characters_dot_characters__pb2.GetCharacterRequest.FromString,
                    response_serializer=characters_dot_characters__pb2.GetCharacterResponse.SerializeToString,
            ),
            'UpdateCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCharacter,
                    request_deserializer=characters_dot_characters__pb2.UpdateCharacterRequest.FromString,
                    response_serializer=characters_dot_characters__pb2.UpdateCharacterResponse.SerializeToString,
            ),
            'DeleteCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCharacter,
                    request_deserializer=characters_dot_characters__pb2.DeleteCharacterRequest.FromString,
                    response_serializer=characters_dot_characters__pb2.DeleteCharacterResponse.SerializeToString,
            ),
            'PermanentCharacterKill': grpc.unary_unary_rpc_method_handler(
                    servicer.PermanentCharacterKill,
                    request_deserializer=characters_dot_characters__pb2.CharacterID.FromString,
                    response_serializer=characters_dot_characters__pb2.CharacterID.SerializeToString,
            ),
            'ChangeClothes': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeClothes,
                    request_deserializer=characters_dot_characters__pb2.ChangeClothesRequest.FromString,
                    response_serializer=characters_dot_characters__pb2.ChangeClothesResponse.SerializeToString,
            ),
            'DeathsStream': grpc.unary_stream_rpc_method_handler(
                    servicer.DeathsStream,
                    request_deserializer=characters_dot_characters__pb2.DeathStreamRequest.FromString,
                    response_serializer=characters_dot_characters__pb2.DeathStreamResponse.SerializeToString,
            ),
            'GetServiceStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceStatus,
                    request_deserializer=common_dot_health__pb2.ServiceStatusRequest.FromString,
                    response_serializer=common_dot_health__pb2.ServiceStatusResponse.SerializeToString,
            ),
            'GetServiceVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetServiceVersion,
                    request_deserializer=common_dot_health__pb2.VersionRequest.FromString,
                    response_serializer=common_dot_health__pb2.VersionResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mruv.characters.MruVCharactersService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MruVCharactersService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/CreateCharacter',
            characters_dot_characters__pb2.CreateCharacterRequest.SerializeToString,
            characters_dot_characters__pb2.CreateCharacterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/GetCharacter',
            characters_dot_characters__pb2.GetCharacterRequest.SerializeToString,
            characters_dot_characters__pb2.GetCharacterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/UpdateCharacter',
            characters_dot_characters__pb2.UpdateCharacterRequest.SerializeToString,
            characters_dot_characters__pb2.UpdateCharacterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/DeleteCharacter',
            characters_dot_characters__pb2.DeleteCharacterRequest.SerializeToString,
            characters_dot_characters__pb2.DeleteCharacterResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PermanentCharacterKill(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/PermanentCharacterKill',
            characters_dot_characters__pb2.CharacterID.SerializeToString,
            characters_dot_characters__pb2.CharacterID.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeClothes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/ChangeClothes',
            characters_dot_characters__pb2.ChangeClothesRequest.SerializeToString,
            characters_dot_characters__pb2.ChangeClothesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeathsStream(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mruv.characters.MruVCharactersService/DeathsStream',
            characters_dot_characters__pb2.DeathStreamRequest.SerializeToString,
            characters_dot_characters__pb2.DeathStreamResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/GetServiceStatus',
            common_dot_health__pb2.ServiceStatusRequest.SerializeToString,
            common_dot_health__pb2.ServiceStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetServiceVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.characters.MruVCharactersService/GetServiceVersion',
            common_dot_health__pb2.VersionRequest.SerializeToString,
            common_dot_health__pb2.VersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
