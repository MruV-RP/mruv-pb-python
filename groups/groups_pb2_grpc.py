# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from common import health_pb2 as common_dot_health__pb2
from groups import groups_pb2 as groups_dot_groups__pb2


class MruVGroupsServiceStub(object):
  """The MruV groups service provides procedures for managing groups.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateGroup = channel.unary_unary(
        '/mruv.MruVGroupsService/CreateGroup',
        request_serializer=groups_dot_groups__pb2.CreateGroupRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.CreateGroupResponse.FromString,
        )
    self.GetGroup = channel.unary_unary(
        '/mruv.MruVGroupsService/GetGroup',
        request_serializer=groups_dot_groups__pb2.GetGroupRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.GetGroupResponse.FromString,
        )
    self.UpdateGroup = channel.unary_unary(
        '/mruv.MruVGroupsService/UpdateGroup',
        request_serializer=groups_dot_groups__pb2.UpdateGroupRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.UpdateGroupResponse.FromString,
        )
    self.DeleteGroup = channel.unary_unary(
        '/mruv.MruVGroupsService/DeleteGroup',
        request_serializer=groups_dot_groups__pb2.DeleteGroupRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.DeleteGroupResponse.FromString,
        )
    self.GetGroups = channel.unary_unary(
        '/mruv.MruVGroupsService/GetGroups',
        request_serializer=groups_dot_groups__pb2.GetGroupsRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.GetGroupsResponse.FromString,
        )
    self.AssignOwner = channel.unary_unary(
        '/mruv.MruVGroupsService/AssignOwner',
        request_serializer=groups_dot_groups__pb2.AssignOwnerRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.AssignOwnerResponse.FromString,
        )
    self.GetOwner = channel.unary_unary(
        '/mruv.MruVGroupsService/GetOwner',
        request_serializer=groups_dot_groups__pb2.GetOwnerRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.GetOwnerResponse.FromString,
        )
    self.AddMember = channel.unary_unary(
        '/mruv.MruVGroupsService/AddMember',
        request_serializer=groups_dot_groups__pb2.AddMemberRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.AddMemberResponse.FromString,
        )
    self.GetMembers = channel.unary_unary(
        '/mruv.MruVGroupsService/GetMembers',
        request_serializer=groups_dot_groups__pb2.GetMembersRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.GetMembersResponse.FromString,
        )
    self.RemoveMember = channel.unary_unary(
        '/mruv.MruVGroupsService/RemoveMember',
        request_serializer=groups_dot_groups__pb2.RemoveMemberRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.RemoveMemberResponse.FromString,
        )
    self.AddPermission = channel.unary_unary(
        '/mruv.MruVGroupsService/AddPermission',
        request_serializer=groups_dot_groups__pb2.AddPermissionRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.AddPermissionResponse.FromString,
        )
    self.GetPermissions = channel.unary_unary(
        '/mruv.MruVGroupsService/GetPermissions',
        request_serializer=groups_dot_groups__pb2.GetPermissionsRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.GetPermissionsResponse.FromString,
        )
    self.RemovePermission = channel.unary_unary(
        '/mruv.MruVGroupsService/RemovePermission',
        request_serializer=groups_dot_groups__pb2.RemovePermissionRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.RemovePermissionResponse.FromString,
        )
    self.AddSubgroup = channel.unary_unary(
        '/mruv.MruVGroupsService/AddSubgroup',
        request_serializer=groups_dot_groups__pb2.AddSubgroupRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.AddSubgroupResponse.FromString,
        )
    self.GetSubgroups = channel.unary_unary(
        '/mruv.MruVGroupsService/GetSubgroups',
        request_serializer=groups_dot_groups__pb2.GetSubgroupsRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.GetSubgroupsResponse.FromString,
        )
    self.RemoveSubgroup = channel.unary_unary(
        '/mruv.MruVGroupsService/RemoveSubgroup',
        request_serializer=groups_dot_groups__pb2.RemoveSubgroupRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.RemoveSubgroupResponse.FromString,
        )
    self.IsPermitted = channel.unary_unary(
        '/mruv.MruVGroupsService/IsPermitted',
        request_serializer=groups_dot_groups__pb2.IsPermittedRequest.SerializeToString,
        response_deserializer=groups_dot_groups__pb2.IsPermittedResponse.FromString,
        )
    self.GetServiceStatus = channel.unary_unary(
        '/mruv.MruVGroupsService/GetServiceStatus',
        request_serializer=common_dot_health__pb2.ServiceStatusRequest.SerializeToString,
        response_deserializer=common_dot_health__pb2.ServiceStatusResponse.FromString,
        )
    self.GetServiceVersion = channel.unary_unary(
        '/mruv.MruVGroupsService/GetServiceVersion',
        request_serializer=common_dot_health__pb2.VersionRequest.SerializeToString,
        response_deserializer=common_dot_health__pb2.VersionResponse.FromString,
        )


class MruVGroupsServiceServicer(object):
  """The MruV groups service provides procedures for managing groups.
  """

  def CreateGroup(self, request, context):
    """Create a group.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetGroup(self, request, context):
    """Get a  group.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UpdateGroup(self, request, context):
    """Update a group.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteGroup(self, request, context):
    """Delete a group.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetGroups(self, request, context):
    """Get all groups.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AssignOwner(self, request, context):
    """Assign an owner. Group can have only one owner. Owner can be a player, a group or an account.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetOwner(self, request, context):
    """Get group owner.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddMember(self, request, context):
    """Add a group member.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetMembers(self, request, context):
    """Get a group member.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveMember(self, request, context):
    """Remove a group member.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddPermission(self, request, context):
    """Add a permission to a group.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetPermissions(self, request, context):
    """Get all group permissions.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemovePermission(self, request, context):
    """Remove group permission.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AddSubgroup(self, request, context):
    """Add a subgroup to a group.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetSubgroups(self, request, context):
    """Get all subgroups.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RemoveSubgroup(self, request, context):
    """Remove a subgroup from group.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def IsPermitted(self, request, context):
    """Check is member of a group is permitted to do specific action.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServiceStatus(self, request, context):
    """Service status
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetServiceVersion(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_MruVGroupsServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateGroup': grpc.unary_unary_rpc_method_handler(
          servicer.CreateGroup,
          request_deserializer=groups_dot_groups__pb2.CreateGroupRequest.FromString,
          response_serializer=groups_dot_groups__pb2.CreateGroupResponse.SerializeToString,
      ),
      'GetGroup': grpc.unary_unary_rpc_method_handler(
          servicer.GetGroup,
          request_deserializer=groups_dot_groups__pb2.GetGroupRequest.FromString,
          response_serializer=groups_dot_groups__pb2.GetGroupResponse.SerializeToString,
      ),
      'UpdateGroup': grpc.unary_unary_rpc_method_handler(
          servicer.UpdateGroup,
          request_deserializer=groups_dot_groups__pb2.UpdateGroupRequest.FromString,
          response_serializer=groups_dot_groups__pb2.UpdateGroupResponse.SerializeToString,
      ),
      'DeleteGroup': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteGroup,
          request_deserializer=groups_dot_groups__pb2.DeleteGroupRequest.FromString,
          response_serializer=groups_dot_groups__pb2.DeleteGroupResponse.SerializeToString,
      ),
      'GetGroups': grpc.unary_unary_rpc_method_handler(
          servicer.GetGroups,
          request_deserializer=groups_dot_groups__pb2.GetGroupsRequest.FromString,
          response_serializer=groups_dot_groups__pb2.GetGroupsResponse.SerializeToString,
      ),
      'AssignOwner': grpc.unary_unary_rpc_method_handler(
          servicer.AssignOwner,
          request_deserializer=groups_dot_groups__pb2.AssignOwnerRequest.FromString,
          response_serializer=groups_dot_groups__pb2.AssignOwnerResponse.SerializeToString,
      ),
      'GetOwner': grpc.unary_unary_rpc_method_handler(
          servicer.GetOwner,
          request_deserializer=groups_dot_groups__pb2.GetOwnerRequest.FromString,
          response_serializer=groups_dot_groups__pb2.GetOwnerResponse.SerializeToString,
      ),
      'AddMember': grpc.unary_unary_rpc_method_handler(
          servicer.AddMember,
          request_deserializer=groups_dot_groups__pb2.AddMemberRequest.FromString,
          response_serializer=groups_dot_groups__pb2.AddMemberResponse.SerializeToString,
      ),
      'GetMembers': grpc.unary_unary_rpc_method_handler(
          servicer.GetMembers,
          request_deserializer=groups_dot_groups__pb2.GetMembersRequest.FromString,
          response_serializer=groups_dot_groups__pb2.GetMembersResponse.SerializeToString,
      ),
      'RemoveMember': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveMember,
          request_deserializer=groups_dot_groups__pb2.RemoveMemberRequest.FromString,
          response_serializer=groups_dot_groups__pb2.RemoveMemberResponse.SerializeToString,
      ),
      'AddPermission': grpc.unary_unary_rpc_method_handler(
          servicer.AddPermission,
          request_deserializer=groups_dot_groups__pb2.AddPermissionRequest.FromString,
          response_serializer=groups_dot_groups__pb2.AddPermissionResponse.SerializeToString,
      ),
      'GetPermissions': grpc.unary_unary_rpc_method_handler(
          servicer.GetPermissions,
          request_deserializer=groups_dot_groups__pb2.GetPermissionsRequest.FromString,
          response_serializer=groups_dot_groups__pb2.GetPermissionsResponse.SerializeToString,
      ),
      'RemovePermission': grpc.unary_unary_rpc_method_handler(
          servicer.RemovePermission,
          request_deserializer=groups_dot_groups__pb2.RemovePermissionRequest.FromString,
          response_serializer=groups_dot_groups__pb2.RemovePermissionResponse.SerializeToString,
      ),
      'AddSubgroup': grpc.unary_unary_rpc_method_handler(
          servicer.AddSubgroup,
          request_deserializer=groups_dot_groups__pb2.AddSubgroupRequest.FromString,
          response_serializer=groups_dot_groups__pb2.AddSubgroupResponse.SerializeToString,
      ),
      'GetSubgroups': grpc.unary_unary_rpc_method_handler(
          servicer.GetSubgroups,
          request_deserializer=groups_dot_groups__pb2.GetSubgroupsRequest.FromString,
          response_serializer=groups_dot_groups__pb2.GetSubgroupsResponse.SerializeToString,
      ),
      'RemoveSubgroup': grpc.unary_unary_rpc_method_handler(
          servicer.RemoveSubgroup,
          request_deserializer=groups_dot_groups__pb2.RemoveSubgroupRequest.FromString,
          response_serializer=groups_dot_groups__pb2.RemoveSubgroupResponse.SerializeToString,
      ),
      'IsPermitted': grpc.unary_unary_rpc_method_handler(
          servicer.IsPermitted,
          request_deserializer=groups_dot_groups__pb2.IsPermittedRequest.FromString,
          response_serializer=groups_dot_groups__pb2.IsPermittedResponse.SerializeToString,
      ),
      'GetServiceStatus': grpc.unary_unary_rpc_method_handler(
          servicer.GetServiceStatus,
          request_deserializer=common_dot_health__pb2.ServiceStatusRequest.FromString,
          response_serializer=common_dot_health__pb2.ServiceStatusResponse.SerializeToString,
      ),
      'GetServiceVersion': grpc.unary_unary_rpc_method_handler(
          servicer.GetServiceVersion,
          request_deserializer=common_dot_health__pb2.VersionRequest.FromString,
          response_serializer=common_dot_health__pb2.VersionResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'mruv.MruVGroupsService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
