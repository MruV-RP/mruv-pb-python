# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from business import business_pb2 as business_dot_business__pb2


class MruVBusinessServiceStub(object):
    """The MruV business service provides procedures for managing businesses.
    Business can be owned by a player or organisation. Every business have it's own group and products to sell.
    Business can have rights to an estates.
    Every business has its own type and depends on it, business provides different services.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBusiness = channel.unary_unary(
                '/mruv.business.MruVBusinessService/CreateBusiness',
                request_serializer=business_dot_business__pb2.CreateBusinessRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.CreateBusinessResponse.FromString,
                )
        self.GetBusiness = channel.unary_unary(
                '/mruv.business.MruVBusinessService/GetBusiness',
                request_serializer=business_dot_business__pb2.GetBusinessRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.Business.FromString,
                )
        self.UpdateBusiness = channel.unary_unary(
                '/mruv.business.MruVBusinessService/UpdateBusiness',
                request_serializer=business_dot_business__pb2.UpdateBusinessRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.Business.FromString,
                )
        self.DeleteBusiness = channel.unary_unary(
                '/mruv.business.MruVBusinessService/DeleteBusiness',
                request_serializer=business_dot_business__pb2.DeleteBusinessRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.DeleteBusinessResponse.FromString,
                )
        self.AssignOwner = channel.unary_unary(
                '/mruv.business.MruVBusinessService/AssignOwner',
                request_serializer=business_dot_business__pb2.AssignOwnerRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.AssignOwnerResponse.FromString,
                )
        self.AssignEstate = channel.unary_unary(
                '/mruv.business.MruVBusinessService/AssignEstate',
                request_serializer=business_dot_business__pb2.AssignEstateRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.AssignEstateResponse.FromString,
                )
        self.UnassignEstate = channel.unary_unary(
                '/mruv.business.MruVBusinessService/UnassignEstate',
                request_serializer=business_dot_business__pb2.UnassignEstateRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.UnassignEstateResponse.FromString,
                )
        self.BuyBusiness = channel.unary_unary(
                '/mruv.business.MruVBusinessService/BuyBusiness',
                request_serializer=business_dot_business__pb2.BuyBusinessRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.BuyBusinessResponse.FromString,
                )
        self.WatchBusiness = channel.unary_stream(
                '/mruv.business.MruVBusinessService/WatchBusiness',
                request_serializer=business_dot_business__pb2.WatchBusinessRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.WatchBusinessResponse.FromString,
                )
        self.WatchBusinesses = channel.unary_stream(
                '/mruv.business.MruVBusinessService/WatchBusinesses',
                request_serializer=business_dot_business__pb2.WatchBusinessesRequest.SerializeToString,
                response_deserializer=business_dot_business__pb2.WatchBusinessesResponse.FromString,
                )


class MruVBusinessServiceServicer(object):
    """The MruV business service provides procedures for managing businesses.
    Business can be owned by a player or organisation. Every business have it's own group and products to sell.
    Business can have rights to an estates.
    Every business has its own type and depends on it, business provides different services.
    """

    def CreateBusiness(self, request, context):
        """Create a business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBusiness(self, request, context):
        """Get a business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBusiness(self, request, context):
        """Update a business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteBusiness(self, request, context):
        """Delete a business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignOwner(self, request, context):
        """Assign a business owner.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssignEstate(self, request, context):
        """Assign an estate to a business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnassignEstate(self, request, context):
        """
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuyBusiness(self, request, context):
        """Buy a business.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchBusiness(self, request, context):
        """Subscribe to business events.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchBusinesses(self, request, context):
        """Subscribe to all businesses events.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MruVBusinessServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBusiness,
                    request_deserializer=business_dot_business__pb2.CreateBusinessRequest.FromString,
                    response_serializer=business_dot_business__pb2.CreateBusinessResponse.SerializeToString,
            ),
            'GetBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBusiness,
                    request_deserializer=business_dot_business__pb2.GetBusinessRequest.FromString,
                    response_serializer=business_dot_business__pb2.Business.SerializeToString,
            ),
            'UpdateBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBusiness,
                    request_deserializer=business_dot_business__pb2.UpdateBusinessRequest.FromString,
                    response_serializer=business_dot_business__pb2.Business.SerializeToString,
            ),
            'DeleteBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteBusiness,
                    request_deserializer=business_dot_business__pb2.DeleteBusinessRequest.FromString,
                    response_serializer=business_dot_business__pb2.DeleteBusinessResponse.SerializeToString,
            ),
            'AssignOwner': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignOwner,
                    request_deserializer=business_dot_business__pb2.AssignOwnerRequest.FromString,
                    response_serializer=business_dot_business__pb2.AssignOwnerResponse.SerializeToString,
            ),
            'AssignEstate': grpc.unary_unary_rpc_method_handler(
                    servicer.AssignEstate,
                    request_deserializer=business_dot_business__pb2.AssignEstateRequest.FromString,
                    response_serializer=business_dot_business__pb2.AssignEstateResponse.SerializeToString,
            ),
            'UnassignEstate': grpc.unary_unary_rpc_method_handler(
                    servicer.UnassignEstate,
                    request_deserializer=business_dot_business__pb2.UnassignEstateRequest.FromString,
                    response_serializer=business_dot_business__pb2.UnassignEstateResponse.SerializeToString,
            ),
            'BuyBusiness': grpc.unary_unary_rpc_method_handler(
                    servicer.BuyBusiness,
                    request_deserializer=business_dot_business__pb2.BuyBusinessRequest.FromString,
                    response_serializer=business_dot_business__pb2.BuyBusinessResponse.SerializeToString,
            ),
            'WatchBusiness': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchBusiness,
                    request_deserializer=business_dot_business__pb2.WatchBusinessRequest.FromString,
                    response_serializer=business_dot_business__pb2.WatchBusinessResponse.SerializeToString,
            ),
            'WatchBusinesses': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchBusinesses,
                    request_deserializer=business_dot_business__pb2.WatchBusinessesRequest.FromString,
                    response_serializer=business_dot_business__pb2.WatchBusinessesResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mruv.business.MruVBusinessService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MruVBusinessService(object):
    """The MruV business service provides procedures for managing businesses.
    Business can be owned by a player or organisation. Every business have it's own group and products to sell.
    Business can have rights to an estates.
    Every business has its own type and depends on it, business provides different services.
    """

    @staticmethod
    def CreateBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/CreateBusiness',
            business_dot_business__pb2.CreateBusinessRequest.SerializeToString,
            business_dot_business__pb2.CreateBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/GetBusiness',
            business_dot_business__pb2.GetBusinessRequest.SerializeToString,
            business_dot_business__pb2.Business.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/UpdateBusiness',
            business_dot_business__pb2.UpdateBusinessRequest.SerializeToString,
            business_dot_business__pb2.Business.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/DeleteBusiness',
            business_dot_business__pb2.DeleteBusinessRequest.SerializeToString,
            business_dot_business__pb2.DeleteBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignOwner(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/AssignOwner',
            business_dot_business__pb2.AssignOwnerRequest.SerializeToString,
            business_dot_business__pb2.AssignOwnerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssignEstate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/AssignEstate',
            business_dot_business__pb2.AssignEstateRequest.SerializeToString,
            business_dot_business__pb2.AssignEstateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UnassignEstate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/UnassignEstate',
            business_dot_business__pb2.UnassignEstateRequest.SerializeToString,
            business_dot_business__pb2.UnassignEstateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BuyBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mruv.business.MruVBusinessService/BuyBusiness',
            business_dot_business__pb2.BuyBusinessRequest.SerializeToString,
            business_dot_business__pb2.BuyBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchBusiness(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mruv.business.MruVBusinessService/WatchBusiness',
            business_dot_business__pb2.WatchBusinessRequest.SerializeToString,
            business_dot_business__pb2.WatchBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchBusinesses(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/mruv.business.MruVBusinessService/WatchBusinesses',
            business_dot_business__pb2.WatchBusinessesRequest.SerializeToString,
            business_dot_business__pb2.WatchBusinessesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
