# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from texturestudio import texturestudio_pb2 as texturestudio_dot_texturestudio__pb2


class TextureStudioServiceStub(object):
  """Service to manage texture studio servers.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CreateServer = channel.unary_unary(
        '/texture_studio.TextureStudioService/CreateServer',
        request_serializer=texturestudio_dot_texturestudio__pb2.CreateServerRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.CreateServerResponse.FromString,
        )
    self.MyServer = channel.unary_unary(
        '/texture_studio.TextureStudioService/MyServer',
        request_serializer=texturestudio_dot_texturestudio__pb2.MyServerRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.MyServerResponse.FromString,
        )
    self.DeleteServer = channel.unary_unary(
        '/texture_studio.TextureStudioService/DeleteServer',
        request_serializer=texturestudio_dot_texturestudio__pb2.DeleteServerRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.DeleteServerResponse.FromString,
        )
    self.StartServer = channel.unary_unary(
        '/texture_studio.TextureStudioService/StartServer',
        request_serializer=texturestudio_dot_texturestudio__pb2.StartServerRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.StartServerResponse.FromString,
        )
    self.StopServer = channel.unary_unary(
        '/texture_studio.TextureStudioService/StopServer',
        request_serializer=texturestudio_dot_texturestudio__pb2.StopServerRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.StopServerResponse.FromString,
        )
    self.RestartServer = channel.unary_unary(
        '/texture_studio.TextureStudioService/RestartServer',
        request_serializer=texturestudio_dot_texturestudio__pb2.RestartServerRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.RestartServerResponse.FromString,
        )
    self.ServerStatus = channel.unary_unary(
        '/texture_studio.TextureStudioService/ServerStatus',
        request_serializer=texturestudio_dot_texturestudio__pb2.ServerStatusRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.ServerStatusResponse.FromString,
        )
    self.UploadProject = channel.unary_unary(
        '/texture_studio.TextureStudioService/UploadProject',
        request_serializer=texturestudio_dot_texturestudio__pb2.UploadProjectRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.UploadProjectResponse.FromString,
        )
    self.GetProject = channel.unary_unary(
        '/texture_studio.TextureStudioService/GetProject',
        request_serializer=texturestudio_dot_texturestudio__pb2.GetProjectRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.GetProjectResponse.FromString,
        )
    self.GetProjects = channel.unary_unary(
        '/texture_studio.TextureStudioService/GetProjects',
        request_serializer=texturestudio_dot_texturestudio__pb2.GetProjectsRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.GetProjectsResponse.FromString,
        )
    self.SubscribeToProjectsChanges = channel.unary_stream(
        '/texture_studio.TextureStudioService/SubscribeToProjectsChanges',
        request_serializer=texturestudio_dot_texturestudio__pb2.SubscribeToProjectsChangesRequest.SerializeToString,
        response_deserializer=texturestudio_dot_texturestudio__pb2.SubscribeToProjectsChangesResponse.FromString,
        )


class TextureStudioServiceServicer(object):
  """Service to manage texture studio servers.
  """

  def CreateServer(self, request, context):
    """Create a new texture studio server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def MyServer(self, request, context):
    """Get texture studio server id for current user.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def DeleteServer(self, request, context):
    """Delete a texture studio server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StartServer(self, request, context):
    """Start a texture studio server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def StopServer(self, request, context):
    """Stop a texture studio server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def RestartServer(self, request, context):
    """Restart a texture studio server.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ServerStatus(self, request, context):
    """Get texture studio server status.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def UploadProject(self, request, context):
    """Upload project to texture studio.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetProject(self, request, context):
    """Get texture-studio objects project.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetProjects(self, request, context):
    """Get all projects.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubscribeToProjectsChanges(self, request, context):
    """Listen for project changes - if texture studio project has been created or modified, this will trigger an event.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TextureStudioServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CreateServer': grpc.unary_unary_rpc_method_handler(
          servicer.CreateServer,
          request_deserializer=texturestudio_dot_texturestudio__pb2.CreateServerRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.CreateServerResponse.SerializeToString,
      ),
      'MyServer': grpc.unary_unary_rpc_method_handler(
          servicer.MyServer,
          request_deserializer=texturestudio_dot_texturestudio__pb2.MyServerRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.MyServerResponse.SerializeToString,
      ),
      'DeleteServer': grpc.unary_unary_rpc_method_handler(
          servicer.DeleteServer,
          request_deserializer=texturestudio_dot_texturestudio__pb2.DeleteServerRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.DeleteServerResponse.SerializeToString,
      ),
      'StartServer': grpc.unary_unary_rpc_method_handler(
          servicer.StartServer,
          request_deserializer=texturestudio_dot_texturestudio__pb2.StartServerRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.StartServerResponse.SerializeToString,
      ),
      'StopServer': grpc.unary_unary_rpc_method_handler(
          servicer.StopServer,
          request_deserializer=texturestudio_dot_texturestudio__pb2.StopServerRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.StopServerResponse.SerializeToString,
      ),
      'RestartServer': grpc.unary_unary_rpc_method_handler(
          servicer.RestartServer,
          request_deserializer=texturestudio_dot_texturestudio__pb2.RestartServerRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.RestartServerResponse.SerializeToString,
      ),
      'ServerStatus': grpc.unary_unary_rpc_method_handler(
          servicer.ServerStatus,
          request_deserializer=texturestudio_dot_texturestudio__pb2.ServerStatusRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.ServerStatusResponse.SerializeToString,
      ),
      'UploadProject': grpc.unary_unary_rpc_method_handler(
          servicer.UploadProject,
          request_deserializer=texturestudio_dot_texturestudio__pb2.UploadProjectRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.UploadProjectResponse.SerializeToString,
      ),
      'GetProject': grpc.unary_unary_rpc_method_handler(
          servicer.GetProject,
          request_deserializer=texturestudio_dot_texturestudio__pb2.GetProjectRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.GetProjectResponse.SerializeToString,
      ),
      'GetProjects': grpc.unary_unary_rpc_method_handler(
          servicer.GetProjects,
          request_deserializer=texturestudio_dot_texturestudio__pb2.GetProjectsRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.GetProjectsResponse.SerializeToString,
      ),
      'SubscribeToProjectsChanges': grpc.unary_stream_rpc_method_handler(
          servicer.SubscribeToProjectsChanges,
          request_deserializer=texturestudio_dot_texturestudio__pb2.SubscribeToProjectsChangesRequest.FromString,
          response_serializer=texturestudio_dot_texturestudio__pb2.SubscribeToProjectsChangesResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'texture_studio.TextureStudioService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
